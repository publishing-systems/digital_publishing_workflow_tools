
 1. $/workflows/setup/setup_1/setup_1 ausführen, falls noch nicht geschehen.
 2. WordPress von https://wordpress.org/download/ herunterladen (Version 4.8 getestet) und installieren. Die WordPress-Installation muss via HTTPS erreichbar sein, das Zertifikat darf nicht selbst worden signiert sein.
 3. Bei WordPress anmelden und unter Einstellungen -> Permalinks die Option "Beitragsname" auswählen, mit "Einfach" oder "Tag und Name" funktioniert die WooCommerce-API nicht.
 4. WooCommerce-Plugin von https://wordpress.org/plugins/woocommerce/ herunterladen (Version 3.1.1 getestet), installieren und in WordPress aktivieren.
 5. Das "WP Add Mime Types"-Plugin von https://de.wordpress.org/plugins/wp-add-mime-types/ herunterladen (Version 2.2.0 getestet), installieren und in WordPress aktivieren. Unter Einstellungen -> Mime Type Settings in das große Eingabefeld der Gruppierung "Add Values" die Zeile "epub = application/epub+zip" eintragen und mit "Save" bestätigen.
 6. In WordPress unter WooCommerce -> Settings -> Reiter "API" sicherstellen, dass der Haken "Enable the REST API" gesetzt ist. Wenn nicht, mit "Save changes" die Änderung bestätigen. Im Unterreiter "Keys/Apps" mit dem Button "Add Key" ein neues Schlüsselpaar hinzufügen. Als "Description" kann man z.B. "digital_publishing_workflow_tools" eintragen, bei "Permissions" muss "Read/Write" ausgewählt werden, mit "Generate API Key" bestätigen.
 7. In $/workflows/onix_to_woocommerce/onix_to_woocommerce_2/jobfile.xml für $/onix-to-woocommerce-2-workflow-jobfile/file-discovery-1-jobfile eine Datei eintragen, die auf $/file_discovery/file_discovery_1/jobfile.xml basiert (nachfolgend "jobfile_file_discovery_1.xml" genannt).
 8. In $/workflows/onix_to_woocommerce/onix_to_woocommerce_2/jobfile.xml für $/onix-to-woocommerce-2-workflow-jobfile/onix-to-woocommerce-1-workflow-jobfile eine Datei eintragen, die auf $/workflows/onix_to_woocommerce/onix_to_woocommerce_1/jobfile.xml basiert (nachfolgend "jobfile_onix_to_woocommerce_1_workflow.xml" genannt).
 9. In der jobfile_file_discovery_1.xml bei $/file-discovery-1-jobfile/input/directory einen Verzeichnispfad eintragen, der ONIX-Eingabedateien in der Version 2.1.3 Short enthält. $/file-discovery-1-jobfile/settings/include-directories muss auf "false" stehen, $/file-discovery-1-jobfile/settings/include-files auf "true".
 10. In der jobfile_onix_to_woocommerce_1_workflow.xml kann $/onix-to-woocommerce-1-workflow-jobfile/input und $/onix-to-woocommerce-1-workflow-jobfile/output komplett entfallen, $/onix-to-woocommerce-1-workflow-jobfile/settings/woocommerce-rest-api-products-url muss allerdings auf den URL der WordPress-Installation gesetzt werden, ergänzt um "/wc-api/v3/products". Bei $/onix-to-woocommerce-1-workflow-jobfile/settings/woocommerce-rest-api-public-key muss in Schritt 6 generierte "Consumer Key" eingetragen werden, bei $/onix-to-woocommerce-1-workflow-jobfile/settings/woocommerce-rest-api-secret-key das "Consumer Secret". In $/onix-to-woocommerce-1-workflow-jobfile/settings/wordpress-media-library-file-uploader-1-workflow-job-file eine Datei eintragen, die auf $/workflows/wordpress_media_library_file_uploader/wordpress_media_library_file_uploader_1/jobfile.xml basiert (nachfolgend "jobfile_wordpress_media_library_file_uploader_1_workflow.xml" genannt).
 11. Die jobfile_wordpress_media_library_file_uploader_1_workflow.xml kann auf $/wordpress-media-library-file-uploader-1-workflow-job/input-files komplett verzichten, $/wordpress-media-library-file-uploader-1-workflow-job/wordpress-xmlrpc-url muss jedoch auf den URL der WordPress-Installation gesetzt werden, ergänzt um "/xmlrpc.php". Bei $/wordpress-media-library-file-uploader-1-workflow-job/wordpress-user-name ist der Benutzername eines WordPress-Nutzers anzugeben, bei $/wordpress-media-library-file-uploader-1-workflow-job/wordpress-user-password das Passwort dieses Nutzers im Klartext.
 12. Sicherstellen, dass $/../automated_digital_publishing/txtreplace/txtreplace1/txtreplace1 existiert und gebaut ist. Dieses Tool ist noch nicht in das digital_publishing_workflow_tools-Package integriert worden und muss daher separat von http://publishing-systems.org/downloads.php heruntergeladen oder aus den Quellen wie unter https://github.com/publishing-systems/automated_digital_publishing bereitgestellt gebaut werden.
 13. $/workflows/onix_to_woocommerce/onix_to_woocommerce_2/onix_to_woocommerce_2 mit der in Schritt 7 angepassten jobfile.xml ausführen.
 14. Kontrollieren, welche ONIX-Einträge als WooCommerce-Produkte und welche Cover-Bilder unter Medien (Mediathek) in WordPress angelegt wurden, sowie die Ergebnisse in $/workflows/onix_to_woocommerce/onix_to_woocommerce_2/temp/result (WooCommerce liefert die Daten des angelegten Produkts im JSON-Format zurück oder meldet einen Fehler) und $/workflows/wordpress_media_library_file_uploader/wordpress_media_library_file_uploader_1/temp/response_*.xml (Attachment-Uploads überschreiben sich allerdings gegenseitig).
